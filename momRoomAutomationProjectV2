/*************************************************************
  Filename - momRoomAutomationProjectV2
  Description - Room automation project which involves bathroom, fan and two LED bulb control
  version - v2 [15/01/2023]
  Updates/ Fixes -
  1. created labels for measuring the parameters i.e. debug message/ turnOffTimer
  2. increment the timer whenever button is pressed from dashboard
  3. Code clean up activity performed

  Debug message reference sheet code-
  1 - "V0 => ON";
  2 - "V0 => OFF";
  3 - "MD & Timer set";
  4 - "1. CS & Turned off";
  5 - "2. CS & Turned off";
  6 - "M - Turned On o/s LED"
  7 - "M - Turned Off o/s LED"
  8 - "someone inside toilet, so timer extended"
 *************************************************************/

// Basic blynk configurtion
#define BLYNK_TEMPLATE_ID "TMPLExKR7Izf"
#define BLYNK_DEVICE_NAME "experimentalProj"
#define BLYNK_AUTH_TOKEN "A-CjeZj-IF4BZjeliZDUzziOFsNgw7J_"

#define BLYNK_PRINT Serial          // Comment this out to disable prints and save space

// Required header
#include <TimeLib.h>
#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>

// Basic configuration variables

// Inform when to stop the timer
long int turnOffTimer = 0;

// Tell whether LED bulb is On/ Off
boolean isBathroomLedOn = false;

// when to turn off LED bulb (in seconds) i.e. after 
int whenToTurnOffBulbDuration = 90; // In seconds 60 seconds or 90 seconds

// contain status of motion sensor i.e. 1 if activity detected/ 0 silent
long motionSensorStatus;

// Store LDR sensor value
int dayLightValue = 0;
// Store the virtual app button value
int iAmStillInToilet = 0;
// Start with 0
int debugMsgCode = 0;

/* GPIO Pin configuration details */
/* ------------------------------ */
// Sensors/ Relay connection details with GPIOs pins
#define windowBulbRelay D1
#define bathroomMotionSensor D2
#define bathroomBulbRelay D3
// Variable used for Outside bathroom - Window bulb and switch
#define windowBulbSwitch D4
#define dayLightSensor D5
#define iAmStillInToiletSwitch D6

// virtual pins configuration
#define WindowLedVirBttn    V0
#define debugMsgCodeVirLabel    V1
#define uptimeVirLabel    V2
//#define StillInToiletVirBttn    V3
#define turnOffTimerVirLabel   V4

// Window Led Relay State
bool windowLedRelayState = LOW; 

// Switch State - ON (HIGH)/ OFF (LOW)
bool windowBulbSwitchState = LOW;

// Wifi configurations
char auth[] = BLYNK_AUTH_TOKEN;
char ssid[] = "hunter22";
char pass[] = "@Serv1234@";

BlynkTimer timer;

BLYNK_CONNECTED() {
  // Request the latest state from the server
  Blynk.syncVirtual(WindowLedVirBttn);
//  Blynk.syncVirtual(StillInToiletVirBttn);
  // Turn off timer
  Blynk.syncVirtual(turnOffTimerVirLabel);
}

// When App button is pushed - switch the state
BLYNK_WRITE(WindowLedVirBttn) {
  windowLedRelayState = param.asInt();
  if(windowLedRelayState == 1){
    // Turned ON the bulb
    digitalWrite(windowBulbRelay, LOW);
    debugMsgCode = 1;
  }
  else { 
    // Turned Off the bulb
    digitalWrite(windowBulbRelay, HIGH);
    debugMsgCode = 2;
  }
}

// When App button [StillInToiletVirBttn] is pushed - switch the state
//BLYNK_WRITE(StillInToiletVirBttn) {
//  iAmStillInToilet = param.asInt();
//  Blynk.virtualWrite(StillInToiletVirBttn, iAmStillInToilet);
//}

// Update the dashboard widgets
void myTimerEvent() {
  Blynk.virtualWrite(debugMsgCodeVirLabel, debugMsgCode);
  Blynk.virtualWrite(uptimeVirLabel, millis()/ 1000);
  Blynk.virtualWrite(turnOffTimerVirLabel, turnOffTimer);
}

void manual_control() {
  if (digitalRead(windowBulbSwitch) == LOW && windowBulbSwitchState == LOW) {
    digitalWrite(windowBulbRelay, LOW);
    Blynk.virtualWrite(WindowLedVirBttn, HIGH);
    windowLedRelayState = HIGH;
    windowBulbSwitchState = HIGH;
    debugMsgCode = 6;
  }

  if (digitalRead(windowBulbSwitch) == HIGH && windowBulbSwitchState == HIGH) {
    digitalWrite(windowBulbRelay, HIGH);
    Blynk.virtualWrite(WindowLedVirBttn, LOW);
    windowLedRelayState = LOW;
    windowBulbSwitchState = LOW;
    debugMsgCode = 7;
  }

  bathRoomAutomaticControl();
}

void bathRoomAutomaticControl() {

    dayLightValue = digitalRead(dayLightSensor);
    Serial.println("dayLightValue : ");
    Serial.println(dayLightValue);

    // When its night
    if (dayLightValue == HIGH) {
        motionSensorStatus = digitalRead(bathroomMotionSensor);
        
        Serial.println("motionSensorStatus : ");
        Serial.println(motionSensorStatus);
        
    
        if (motionSensorStatus == HIGH) {
          if (turnOffTimer == 0) {
              turnOffTimer = now() + whenToTurnOffBulbDuration;
              digitalWrite(bathroomBulbRelay, LOW);
              isBathroomLedOn = true;
              debugMsgCode = 3;
          }
        }

        /* Remove this code after some time
        if (motionSensorStatus == LOW) {
            if (now() > turnOffTimer && isBathroomLedOn) {
              digitalWrite(bathroomBulbRelay, HIGH);
              turnOffTimer = 0;
              isBathroomLedOn = false;
              Serial.println("condition satisfied");
              debugMsgCode = 4;
            }
        }
        */

    }

    // Check if current time reached the Off Timer and LED still ON
    if (now() > turnOffTimer && isBathroomLedOn) {
          // Check if bttn pressed for long stay
          if (digitalRead(iAmStillInToiletSwitch) == LOW) {
            // Increment the off timer
            turnOffTimer += whenToTurnOffBulbDuration;
            debugMsgCode = 8;
          } else {
            // Turn OFF the bulb by making relay high
            digitalWrite(bathroomBulbRelay, HIGH);
            // Resetting the flags
            turnOffTimer = 0;
            isBathroomLedOn = false;
            debugMsgCode = 5;
            Serial.println("Condition satisfied");
          }     
    }

    delay(100);
}

void setup()
{
  // Debug console
  Serial.begin(115200);
  delay(100);

  // Initial setup
  pinMode(windowBulbRelay, OUTPUT);
  pinMode(windowBulbSwitch, INPUT_PULLUP);
  pinMode(iAmStillInToiletSwitch, INPUT_PULLUP);

  // LDR sensor as input
  pinMode(dayLightSensor, INPUT);

  // Inside bathroom setup - make relay as output and sensor asinput
  pinMode(bathroomBulbRelay, OUTPUT);
  pinMode(bathroomMotionSensor, INPUT);

  //During Starting process - all bulb should be TURNED OFF
  // Turing relay high will turned off the bulb
  digitalWrite(windowBulbRelay, HIGH);
  digitalWrite(bathroomBulbRelay, HIGH);
  Blynk.virtualWrite(WindowLedVirBttn, windowLedRelayState);

  Blynk.begin(auth, ssid, pass);

  // Setup a function to be called every second
  timer.setInterval(1000L, myTimerEvent);
}

void loop()
{
  Blynk.run();
  timer.run();
  // call all manual control i.e. switches, relay
  manual_control();
}
